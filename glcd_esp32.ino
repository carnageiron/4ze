#include <Adafruit_GFX.h>   // Include Adafruit GFX library
#include <KS0108_GLCD.h>    // Include KS0108 GLCD library

// ESP32 pin mapping for KS0108 GLCD
// Avoid using pins 6-11 (connected to flash)
// Be cautious with pins 0, 2, 4, 5, 12, 15 (strapping pins)
#define DI_PIN 23  // Data/Instruction (DI)
#define RW_PIN 22  // Read/Write (RW)
#define E_PIN  21  // Enable (E)
#define DB0_PIN 19 // Data bit 0
#define DB1_PIN 18 // Data bit 1
#define DB2_PIN 5  // Data bit 2
#define DB3_PIN 17 // Data bit 3
#define DB4_PIN 16 // Data bit 4
#define DB5_PIN 4  // Data bit 5
#define DB6_PIN 0  // Data bit 6
#define DB7_PIN 2  // Data bit 7
#define CS1_PIN 15 // Chip select 1
#define CS2_PIN 13 // Chip select 2
#define RES_PIN 14 // Reset
#define SO_PIN 25 // Sound Pin

// Initialize KS0108 GLCD with the ESP32 pins
KS0108_GLCD display = KS0108_GLCD(DI_PIN, RW_PIN, E_PIN, DB0_PIN, DB1_PIN, DB2_PIN, DB3_PIN, 
                                 DB4_PIN, DB5_PIN, DB6_PIN, DB7_PIN, CS1_PIN, CS2_PIN, RES_PIN);



// Bitmap logo data remains unchanged
static const unsigned char PROGMEM logo_bmp[] = {
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B01100000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B11000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000001, 0B11000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000011, 0B11000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000111, 0B11000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00011111, 0B11000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00111111, 0B10000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B01111111, 0B10000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B11111111, 0B10000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000001, 0B11111111, 0B10000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00001111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00011111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B01111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000001, 
0B11111111, 0B11111110, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000011, 
0B11111111, 0B11111110, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000111, 
0B11111111, 0B11111110, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00001111, 
0B11011111, 0B11111110, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00111111, 
0B11111111, 0B11111111, 0B11111111, 0B11111111, 
0B11111111, 0B11111100, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B01111111, 
0B11111111, 0B11111111, 0B11111111, 0B11111111, 
0B11111111, 0B11111000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B11111111, 
0B11111111, 0B11111111, 0B11111111, 0B11111111, 
0B11111111, 0B11100000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000001, 0B11111111, 
0B11111111, 0B11111111, 0B11111111, 0B11111111, 
0B11111111, 0B11000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000011, 0B11111111, 
0B11111111, 0B11111111, 0B11111111, 0B11111111, 
0B11111111, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00001111, 0B11111111, 
0B11111111, 0B11111111, 0B11111111, 0B11111111, 
0B11111111, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11111000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11111011, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B11110000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11111011, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B11100000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11111011, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B11100000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11110011, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B11100000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11110011, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B11100000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11110000, 0B00000001, 0B11111110, 
0B11111111, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11110000, 0B00000011, 0B11111100, 
0B11111110, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11100000, 0B00000111, 0B11111000, 
0B11111110, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11100000, 0B00001111, 0B11110000, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11100000, 0B00111111, 0B11100001, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11100000, 0B01111111, 0B10000001, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11100000, 0B11111111, 0B00000001, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11000001, 0B11111110, 0B00000001, 
0B11111100, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11000011, 0B11111100, 0B00000001, 
0B11111100, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11001111, 0B11110000, 0B00000011, 
0B11111100, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B11011111, 0B11100000, 0B00000011, 
0B11111111, 0B11111111, 0B10000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B10011111, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B10000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B10111111, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B10111111, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B10111111, 0B11111111, 0B11111111, 
0B11111111, 0B11111111, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B01111111, 0B11000000, 0B11111000, 
0B00011111, 0B10000111, 0B10011110, 0B00111000, 
0B01111111, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B01111111, 0B11100000, 0B11111000, 
0B01111111, 0B11000111, 0B00111110, 0B00111000, 
0B11111111, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B01111001, 0B11100001, 0B11111000, 
0B01111001, 0B11100111, 0B00111111, 0B00111001, 
0B11100011, 0B11000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000011, 0B01110001, 0B11100001, 0B11111000, 
0B11110001, 0B11101111, 0B00111111, 0B00111011, 
0B11000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000010, 0B01111111, 0B11100011, 0B10111100, 
0B11110000, 0B00001111, 0B00111111, 0B11111011, 
0B11000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000010, 0B11111111, 0B11000011, 0B10111100, 
0B11110000, 0B00001111, 0B00111011, 0B11110011, 
0B11001111, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000010, 0B11110111, 0B10000111, 0B11111100, 
0B11110001, 0B11001110, 0B01111011, 0B11110011, 
0B11011111, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000010, 0B11110011, 0B10001111, 0B11111100, 
0B11110011, 0B11001110, 0B01110001, 0B11110011, 
0B11100111, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000010, 0B11100011, 0B11001110, 0B00011100, 
0B01111111, 0B10011110, 0B01110000, 0B11110001, 
0B11111111, 0B10000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000001, 0B11100011, 0B11011100, 0B00011110, 
0B00111111, 0B00011110, 0B01110000, 0B11100000, 
0B11111111, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000, 
0B00000000, 0B00000000, 0B00000000, 0B00000000
};

// Use an ADC1 pin for analog input (ADC2 pins can't be used with WiFi)
#define ANALOG_PIN 36 // GPIO 36 (ADC1_CH0)

void setup() {
    Serial.begin(9600);

    // Initialize the display
    if (display.begin(KS0108_CS_ACTIVE_HIGH) == false) {
        Serial.println(F("Display initialization failed!"));
        while (true);  // Stay here forever
    }

    display.clearDisplay(); // Clear the buffer
    testdrawbitmap();       // Draw a small bitmap image
    delay(1000);
    testdrawstyles();       // Draw stylized characters
}

void loop() {
    testdrawstyles(); 
}

// Function to draw a bitmap
void testdrawbitmap() {
    display.clearDisplay();
    display.drawBitmap(
        (display.width()  - LOGO_WIDTH) / 2,
        (display.height() - LOGO_HEIGHT) / 2,
        logo_bmp, LOGO_WIDTH, LOGO_HEIGHT, 1);
    display.display();
    //play sound for RTDS
    //80-90 dB for 2-3 sec
    digitalWrite(SO_PIN, HIGH); // Set to HIGH to make the buzzer sound
    delay(3000);
    digitalWrite(SO_PIN, LOW); // LOW to turn off the buzzer 
    delay(3000);
}

// Function to display speed
void testdrawstyles() {
    // Read from ESP32 ADC pin
    int speed = analogRead(ANALOG_PIN);
    
    // ESP32 ADC has 12-bit resolution (0-4095) vs Arduino's 10-bit (0-1023)
    int speed1 = map(speed, 0, 4095, 0, 90);
  
    display.clearDisplay();
    display.setTextSize(5);             // Normal 1:1 pixel scale
    display.setTextColor(KS0108_ON);    // Draw white text
    display.setCursor(5, 15);           // Start at top-left corner
    display.print(speed1);
    display.setTextSize(2); 
    display.setCursor(65, 32);
    display.print(F("KM/H"));
    display.display();
}
