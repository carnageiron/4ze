/*#include <Adafruit_GFX.h>   // Include Adafruit GFX library
#include <KS0108_GLCD.h>  //Include KS0108 GLCD

#define LOGO_WIDTH 128
#define LOGO_HEIGHT 64

// Pin mappings for Arduino Nano
#define DI_PIN   2
#define RW_PIN   3
#define E_PIN    4
#define DB0_PIN  5
#define DB1_PIN  6
#define DB2_PIN  7
#define DB3_PIN  8
#define DB4_PIN  9
#define DB5_PIN  10
#define DB6_PIN  11
#define DB7_PIN  12
#define CS1_PIN  A2
#define CS2_PIN  A3
#define RES_PIN  A4
#define BUTTON_PIN A5
#define CAPACITY_PIN A0

// Menu Pages
int menuIndex = 0;
const int totalMenus = 4;
unsigned long lastButtonPress = 0;
const int debounceDelay = 250;

// Sample logo bitmap (128x64, black and white)
const uint8_t logoBitmap[] PROGMEM = {
  // Replace this with your actual bitmap data (1024 bytes for 128x64 monochrome)
  // Example: 0xFF, 0x00, 0xFF, ... 
  // Use an online tool like https://javl.github.io/image2cpp/
  // for full-screen bitmap conversion
};

// Draw logo
void drawLogo() {
  GLCD.ClearScreen();
  GLCD.DrawBitmap(logoBitmap, 0, 0, 128, 64);
  delay(2000);
}

// Simulate battery values
float getSpeed() { return 35.2; }       // km/h
float getCapacity() { return 78.2; }    // %
float getVoltage() { return 48.6; }     // V
float getSOH() { return 95.4; }         // %

void setup() {
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  GLCD.Init();
  drawLogo();
  displayMenu(menuIndex);
}

void loop() {
  // Button Debounce and Menu Navigation
  if (digitalRead(BUTTON_PIN) == LOW && millis() - lastButtonPress > debounceDelay) {
    lastButtonPress = millis();
    menuIndex = (menuIndex + 1) % totalMenus;
    displayMenu(menuIndex);
  }
}
*/


#include <Adafruit_GFX.h>   // Include Adafruit GFX library
#include <KS0108_GLCD.h>    // Include KS0108 GLCD library

// Initialize KS0108 GLCD with the following pin configuration
KS0108_GLCD display = KS0108_GLCD(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, A2, A3, A4);

#define BUTTON_PIN    A0      // Example: Button connected to analog pin A0
#define debounceDelay 200     // 200ms debounce delay
unsigned long lastButtonPress = 0;
int menuIndex = 0;
const int totalMenus = 4;     // 4 menus: speed, battery, voltage, SOH

// Bitmap Logo Settings (adjust dimensions to match your image)
#define LOGO_WIDTH   128       // Width of the logo in pixels
#define LOGO_HEIGHT  64      // Height of the logo in pixels



// Bitmap logo data
static const unsigned char PROGMEM logo_bmp[] = {
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B01100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000001, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000011, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000111, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00011111, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B01111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000001, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00001111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00011111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B01111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000001, 
  0B11111111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000011, 
  0B11111111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000111, 
  0B11111111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00001111, 
  0B11011111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111100, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B01111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11100000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000001, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000011, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00001111, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11110000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110000, 0B00000001, 0B11111110, 
  0B11111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110000, 0B00000011, 0B11111100, 
  0B11111110, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B00000111, 0B11111000, 
  0B11111110, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B00001111, 0B11110000, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B00111111, 0B11100001, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B01111111, 0B10000001, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B11111111, 0B00000001, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11000001, 0B11111110, 0B00000001, 
  0B11111100, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11000011, 0B11111100, 0B00000001, 
  0B11111100, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11001111, 0B11110000, 0B00000011, 
  0B11111100, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11011111, 0B11100000, 0B00000011, 
  0B11111111, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10011111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01111111, 0B11000000, 0B11111000, 
  0B00011111, 0B10000111, 0B10011110, 0B00111000, 
  0B01111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01111111, 0B11100000, 0B11111000, 
  0B01111111, 0B11000111, 0B00111110, 0B00111000, 
  0B11111111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01111001, 0B11100001, 0B11111000, 
  0B01111001, 0B11100111, 0B00111111, 0B00111001, 
  0B11100011, 0B11000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01110001, 0B11100001, 0B11111000, 
  0B11110001, 0B11101111, 0B00111111, 0B00111011, 
  0B11000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B01111111, 0B11100011, 0B10111100, 
  0B11110000, 0B00001111, 0B00111111, 0B11111011, 
  0B11000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11111111, 0B11000011, 0B10111100, 
  0B11110000, 0B00001111, 0B00111011, 0B11110011, 
  0B11001111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11110111, 0B10000111, 0B11111100, 
  0B11110001, 0B11001110, 0B01111011, 0B11110011, 
  0B11011111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11110011, 0B10001111, 0B11111100, 
  0B11110011, 0B11001110, 0B01110001, 0B11110011, 
  0B11100111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11100011, 0B11001110, 0B00011100, 
  0B01111111, 0B10011110, 0B01110000, 0B11110001, 
  0B11111111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000001, 0B11100011, 0B11011100, 0B00011110, 
  0B00111111, 0B00011110, 0B01110000, 0B11100000, 
  0B11111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000
};

void setup() {
    Serial.begin(9600);
    pinMode(BUTTON_PIN, INPUT_PULLUP);

    // Initialize the display
    if (display.begin(KS0108_CS_ACTIVE_HIGH) == false) {
        Serial.println(F("Display initialization failed!"));
        while (true);  // Stay here forever
    }

    display.clearDisplay(); // Clear the buffer
    testdrawbitmap();       // Draw a small bitmap image
    delay(3000);
    displayMenu(menuIndex);       // Draw stylized characters
}

void loop() {
    // Button Debounce and Menu Navigation
  if (digitalRead(BUTTON_PIN) == LOW && millis() - lastButtonPress > debounceDelay) {
    lastButtonPress = millis();
    menuIndex = (menuIndex + 1) % totalMenus;
    displayMenu(menuIndex);
  }
}

// Function to draw a bitmap
void testdrawbitmap() {
    display.clearDisplay();
    display.drawBitmap(
        (display.width()  - LOGO_WIDTH) / 2,
        (display.height() - LOGO_HEIGHT) / 2,
        logo_bmp, LOGO_WIDTH, LOGO_HEIGHT, 1);
    display.display();
    delay(1000);
}

//menu
void displayMenu(int index) {
  display.clearDisplay();
  display.setTextSize(5);

  switch (index) {
    case 0:
      display.setTextColor(KS0108_ON); 
      display.print(speed());
      display.setTextSize(2); 
      display.setCursor(65, 32);
      display.print(F("KM/H"));
      display.display();
      break;

    case 1:
      display.setTextColor(KS0108_ON); 
      display.print(battery_cap());
      display.setCursor(65, 32);
      display.print(F("%"));
      display.display();
      break;

    case 2:
      display.setTextColor(KS0108_ON); 
      display.print(voltage());
      display.setTextSize(2); 
      display.setCursor(65, 32);
      display.print(F("V"));
      display.display();
      break;

    case 3:
      display.setTextColor(KS0108_ON); 
      display.print(soh());
      display.setTextSize(2); 
      display.setCursor(65, 32);
      display.print(F("%"));
      display.display();
      break;
  }
}

float speed() { return 35.2; }       // km/h
float battery_cap() { return 78.2; }    // %
float voltage() { return 48.6; }     // V
float soh() { return 95.4; } 
