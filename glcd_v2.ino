#include <Adafruit_GFX.h>   // Include Adafruit GFX library
#include <KS0108_GLCD.h>    // Include KS0108 GLCD library

// Initialize KS0108 GLCD with the following pin configuration
KS0108_GLCD display = KS0108_GLCD(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, A2, A3, A4);

#define BUTTON_PIN    A0      // Example: Button connected to analog pin A0
#define debounceDelay 200     // 200ms debounce delay
unsigned long lastButtonPress = 0;
int menuIndex = 0;
const int totalMenus = 4;     // 4 menus: speed, battery, voltage, SOH

// Bitmap Logo Settings (adjust dimensions to match your image)
#define LOGO_WIDTH   128       // Width of the logo in pixels
#define LOGO_HEIGHT  64      // Height of the logo in pixels



// Bitmap logo data
static const unsigned char PROGMEM logo_bmp[] = {
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B01100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000001, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000011, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000111, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00011111, 0B11000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B01111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000001, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00001111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00011111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B01111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000001, 
  0B11111111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000011, 
  0B11111111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000111, 
  0B11111111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00001111, 
  0B11011111, 0B11111110, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111100, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B01111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11100000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000001, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000011, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00001111, 0B11111111, 
  0B11111111, 0B11111111, 0B11111111, 0B11111111, 
  0B11111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11110000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11111011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110011, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B11100000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110000, 0B00000001, 0B11111110, 
  0B11111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11110000, 0B00000011, 0B11111100, 
  0B11111110, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B00000111, 0B11111000, 
  0B11111110, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B00001111, 0B11110000, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B00111111, 0B11100001, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B01111111, 0B10000001, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11100000, 0B11111111, 0B00000001, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11000001, 0B11111110, 0B00000001, 
  0B11111100, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11000011, 0B11111100, 0B00000001, 
  0B11111100, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11001111, 0B11110000, 0B00000011, 
  0B11111100, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B11011111, 0B11100000, 0B00000011, 
  0B11111111, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10011111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B10000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10111111, 0B11111111, 0B11111111, 
  0B11111111, 0B11111111, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01111111, 0B11000000, 0B11111000, 
  0B00011111, 0B10000111, 0B10011110, 0B00111000, 
  0B01111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01111111, 0B11100000, 0B11111000, 
  0B01111111, 0B11000111, 0B00111110, 0B00111000, 
  0B11111111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01111001, 0B11100001, 0B11111000, 
  0B01111001, 0B11100111, 0B00111111, 0B00111001, 
  0B11100011, 0B11000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000011, 0B01110001, 0B11100001, 0B11111000, 
  0B11110001, 0B11101111, 0B00111111, 0B00111011, 
  0B11000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B01111111, 0B11100011, 0B10111100, 
  0B11110000, 0B00001111, 0B00111111, 0B11111011, 
  0B11000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11111111, 0B11000011, 0B10111100, 
  0B11110000, 0B00001111, 0B00111011, 0B11110011, 
  0B11001111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11110111, 0B10000111, 0B11111100, 
  0B11110001, 0B11001110, 0B01111011, 0B11110011, 
  0B11011111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11110011, 0B10001111, 0B11111100, 
  0B11110011, 0B11001110, 0B01110001, 0B11110011, 
  0B11100111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000010, 0B11100011, 0B11001110, 0B00011100, 
  0B01111111, 0B10011110, 0B01110000, 0B11110001, 
  0B11111111, 0B10000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000001, 0B11100011, 0B11011100, 0B00011110, 
  0B00111111, 0B00011110, 0B01110000, 0B11100000, 
  0B11111111, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000, 
  0B00000000, 0B00000000, 0B00000000, 0B00000000
};

void setup() {
    Serial.begin(9600);
    pinMode(BUTTON_PIN, INPUT_PULLUP);

    // Initialize the display
    if (display.begin(KS0108_CS_ACTIVE_HIGH) == false) {
        Serial.println(F("Display initialization failed!"));
        while (true);  // Stay here forever
    }

    display.clearDisplay(); // Clear the buffer
    testdrawbitmap();       // Draw a small bitmap image
    delay(3000);
    displayMenu(menuIndex);       // Draw stylized characters
}

void loop() {
    // Button Debounce and Menu Navigation
  if (digitalRead(BUTTON_PIN) == LOW && millis() - lastButtonPress > debounceDelay) {
    lastButtonPress = millis();
    menuIndex = (menuIndex + 1) % totalMenus;
    displayMenu(menuIndex);
  }
}

// Function to draw a bitmap
void testdrawbitmap() {
    display.clearDisplay();
    display.drawBitmap(
        (display.width()  - LOGO_WIDTH) / 2,
        (display.height() - LOGO_HEIGHT) / 2,
        logo_bmp, LOGO_WIDTH, LOGO_HEIGHT, 1);
    display.display();
    delay(1000);
}

//display menu infinite cycling 
void displayMenu(int index)
{
  display.clearDisplay();
  display.setTextSize(5);

  switch (index)
  {
    case 0:
      display.setTextColor(KS0108_ON); 
      display.print(speed());
      display.setTextSize(2); 
      display.setCursor(65, 32);
      display.print(F("KM/H"));
      display.display();
      break;

    case 1:
      display.setTextColor(KS0108_ON); 
      display.print(battery_cap());
      display.setCursor(65, 32);
      display.print(F("%"));
      display.display();
      break;

    case 2:
      display.setTextColor(KS0108_ON); 
      display.print(voltage());
      display.setTextSize(2); 
      display.setCursor(65, 32);
      display.print(F("V"));
      display.display();
      break;

    case 3:
      display.setTextColor(KS0108_ON); 
      display.print(soh());
      display.setTextSize(2); 
      display.setCursor(65, 32);
      display.print(F("%"));
      display.display();
      break;
  }
}

float speed()
{ 
  int s = analogRead(A1);
  int s1 = map(s, 0, 1023, 0, 100);
  return s1; 
}
float battery_cap() 
{ 
  int b = analogRead(A5);
  int b1 = map(b, 0, 1023, 0, 100);
  return b1;
}
float voltage() 
{
  int v = analogRead(A6);
  int v1 = map(v, 0, 1023, 0, 350);  
  return v1;
}
float soh() 
{
  int sh = analogRead(A7);
  int sh1 = map(sh, 0, 1023, 0, 100);
  return sh1;
} 
